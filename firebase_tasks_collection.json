{
  "tasks": {
    "js-closures": {
      "id": "js-closures",
      "title": "Master JavaScript Closures",
      "description": "Deep dive into closures, lexical scoping, and practical applications",
      "category": "JavaScript",
      "status": "todo",
      "priority": "high",
      "difficulty": "medium",
      "estimatedTime": 120,
      "tags": ["closures", "scoping", "functions"],
      "resources": [
        {
          "id": "js-closures-1",
          "title": "Understanding Closures in JavaScript",
          "url": "https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-closure-b2f0d2152b36",
          "type": "medium",
          "difficulty": "intermediate",
          "estimatedReadTime": 15,
          "rating": 4.8,
          "lastUpdated": "2024-01-15T00:00:00.000Z",
          "author": "Eric Elliott",
          "tags": ["javascript", "closures", "interview"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.7,
          "difficultyAccuracy": 0.9,
          "contentFreshness": 0.8,
          "userCompletionRate": 0.85,
          "helpfulnessScore": 4.6
        },
        {
          "id": "js-closures-2",
          "title": "JavaScript Closures Explained",
          "url": "https://dev.to/lydiahallie/javascript-visualized-scope-chain-13pd",
          "type": "dev.to",
          "difficulty": "beginner",
          "estimatedReadTime": 12,
          "rating": 4.9,
          "lastUpdated": "2024-01-10T00:00:00.000Z",
          "author": "Lydia Hallie",
          "tags": ["javascript", "closures", "visualization"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.9,
          "difficultyAccuracy": 0.95,
          "contentFreshness": 0.9,
          "userCompletionRate": 0.92,
          "helpfulnessScore": 4.8
        },
        {
          "id": "js-closures-3",
          "title": "Closures in JavaScript - MDN",
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures",
          "type": "documentation",
          "difficulty": "intermediate",
          "estimatedReadTime": 20,
          "rating": 4.5,
          "lastUpdated": "2024-01-20T00:00:00.000Z",
          "author": "MDN Contributors",
          "tags": ["javascript", "closures", "documentation"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.5,
          "difficultyAccuracy": 0.98,
          "contentFreshness": 0.7,
          "userCompletionRate": 0.78,
          "helpfulnessScore": 4.4
        }
      ],
      "subtasks": [
        {
          "id": "js-closures-sub-1",
          "title": "Understand lexical scoping",
          "completed": false,
          "estimatedTime": 10,
          "resources": [],
          "notes": "Learn how variables are scoped in JavaScript"
        },
        {
          "id": "js-closures-sub-2",
          "title": "Practice closure examples",
          "completed": false,
          "estimatedTime": 15,
          "resources": [],
          "notes": "Write your own closure functions"
        },
        {
          "id": "js-closures-sub-3",
          "title": "Implement module pattern",
          "completed": false,
          "estimatedTime": 20,
          "resources": [],
          "notes": "Use closures to create private variables"
        },
        {
          "id": "js-closures-sub-4",
          "title": "Debug closure issues",
          "completed": false,
          "estimatedTime": 15,
          "resources": [],
          "notes": "Common pitfalls and solutions"
        },
        {
          "id": "js-closures-sub-5",
          "title": "Build practical applications",
          "completed": false,
          "estimatedTime": 30,
          "resources": [],
          "notes": "Real-world closure implementations"
        }
      ],
      "prerequisites": [],
      "followUpTasks": ["js-promises", "js-async-await"],
      "masteryLevel": "learning",
      "reviewSchedule": {
        "nextReview": "2024-12-20T00:00:00.000Z",
        "reviewCount": 0,
        "interval": 7,
        "retentionScore": 0.8
      },
      "timeTracking": {
        "estimatedTime": 120,
        "totalTimeSpent": 0,
        "sessions": []
      },
      "createdAt": "2024-12-13T00:00:00.000Z",
      "updatedAt": "2024-12-13T00:00:00.000Z",
      "completedAt": null
    },
    "js-event-loop": {
      "id": "js-event-loop",
      "title": "Master JavaScript Event Loop",
      "description": "Understand the event loop, call stack, and asynchronous programming",
      "category": "JavaScript",
      "status": "todo",
      "priority": "high",
      "difficulty": "hard",
      "estimatedTime": 180,
      "tags": ["event-loop", "async", "callbacks"],
      "resources": [
        {
          "id": "js-event-loop-1",
          "title": "What is the Event Loop?",
          "url": "https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/",
          "type": "documentation",
          "difficulty": "intermediate",
          "estimatedReadTime": 25,
          "rating": 4.7,
          "lastUpdated": "2024-01-18T00:00:00.000Z",
          "author": "Node.js Team",
          "tags": ["javascript", "event-loop", "nodejs"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.6,
          "difficultyAccuracy": 0.9,
          "contentFreshness": 0.8,
          "userCompletionRate": 0.75,
          "helpfulnessScore": 4.5
        },
        {
          "id": "js-event-loop-2",
          "title": "JavaScript Event Loop Explained",
          "url": "https://medium.com/front-end-weekly/javascript-event-loop-explained-4cd26af121d4",
          "type": "medium",
          "difficulty": "intermediate",
          "estimatedReadTime": 18,
          "rating": 4.6,
          "lastUpdated": "2024-01-12T00:00:00.000Z",
          "author": "Alexander Kondov",
          "tags": ["javascript", "event-loop", "async"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.5,
          "difficultyAccuracy": 0.85,
          "contentFreshness": 0.7,
          "userCompletionRate": 0.8,
          "helpfulnessScore": 4.4
        },
        {
          "id": "js-event-loop-3",
          "title": "Event Loop Visualization",
          "url": "https://www.youtube.com/watch?v=8aGhZQkoFbQ",
          "type": "video",
          "difficulty": "beginner",
          "estimatedReadTime": 15,
          "rating": 4.9,
          "lastUpdated": "2024-01-05T00:00:00.000Z",
          "author": "Philip Roberts",
          "tags": ["javascript", "event-loop", "visualization"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.8,
          "difficultyAccuracy": 0.95,
          "contentFreshness": 0.6,
          "userCompletionRate": 0.9,
          "helpfulnessScore": 4.7
        }
      ],
      "subtasks": [
        {
          "id": "js-event-loop-sub-1",
          "title": "Understand call stack",
          "completed": false,
          "estimatedTime": 20,
          "resources": [],
          "notes": "Learn how function calls are managed"
        },
        {
          "id": "js-event-loop-sub-2",
          "title": "Study Web APIs",
          "completed": false,
          "estimatedTime": 25,
          "resources": [],
          "notes": "Browser APIs and their role"
        },
        {
          "id": "js-event-loop-sub-3",
          "title": "Master callback queue",
          "completed": false,
          "estimatedTime": 30,
          "resources": [],
          "notes": "How callbacks are queued and executed"
        },
        {
          "id": "js-event-loop-sub-4",
          "title": "Practice async patterns",
          "completed": false,
          "estimatedTime": 35,
          "resources": [],
          "notes": "setTimeout, setInterval, promises"
        },
        {
          "id": "js-event-loop-sub-5",
          "title": "Debug async issues",
          "completed": false,
          "estimatedTime": 40,
          "resources": [],
          "notes": "Common async programming mistakes"
        },
        {
          "id": "js-event-loop-sub-6",
          "title": "Build async applications",
          "completed": false,
          "estimatedTime": 30,
          "resources": [],
          "notes": "Real-world async implementations"
        }
      ],
      "prerequisites": ["js-closures"],
      "followUpTasks": ["js-promises", "js-async-await"],
      "masteryLevel": "learning",
      "reviewSchedule": {
        "nextReview": "2024-12-20T00:00:00.000Z",
        "reviewCount": 0,
        "interval": 7,
        "retentionScore": 0.7
      },
      "timeTracking": {
        "estimatedTime": 180,
        "totalTimeSpent": 0,
        "sessions": []
      },
      "createdAt": "2024-12-13T00:00:00.000Z",
      "updatedAt": "2024-12-13T00:00:00.000Z",
      "completedAt": null
    },
    "js-promises": {
      "id": "js-promises",
      "title": "Master JavaScript Promises",
      "description": "Learn promise-based asynchronous programming and error handling",
      "category": "JavaScript",
      "status": "todo",
      "priority": "high",
      "difficulty": "medium",
      "estimatedTime": 150,
      "tags": ["promises", "async", "error-handling"],
      "resources": [
        {
          "id": "js-promises-1",
          "title": "JavaScript Promises: An Introduction",
          "url": "https://web.dev/promises/",
          "type": "documentation",
          "difficulty": "beginner",
          "estimatedReadTime": 20,
          "rating": 4.8,
          "lastUpdated": "2024-01-20T00:00:00.000Z",
          "author": "Jake Archibald",
          "tags": ["javascript", "promises", "async"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.7,
          "difficultyAccuracy": 0.9,
          "contentFreshness": 0.9,
          "userCompletionRate": 0.85,
          "helpfulnessScore": 4.6
        },
        {
          "id": "js-promises-2",
          "title": "Promise.all() vs Promise.allSettled()",
          "url": "https://medium.com/javascript-in-plain-english/promise-all-vs-promise-allsettled-6c4b6b3f0b1",
          "type": "medium",
          "difficulty": "intermediate",
          "estimatedReadTime": 15,
          "rating": 4.5,
          "lastUpdated": "2024-01-15T00:00:00.000Z",
          "author": "Dmitri Pavlutin",
          "tags": ["javascript", "promises", "comparison"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.4,
          "difficultyAccuracy": 0.85,
          "contentFreshness": 0.8,
          "userCompletionRate": 0.75,
          "helpfulnessScore": 4.3
        },
        {
          "id": "js-promises-3",
          "title": "Promise Chain Patterns",
          "url": "https://javascript.info/promise-chaining",
          "type": "documentation",
          "difficulty": "intermediate",
          "estimatedReadTime": 25,
          "rating": 4.6,
          "lastUpdated": "2024-01-10T00:00:00.000Z",
          "author": "Ilya Kantor",
          "tags": ["javascript", "promises", "chaining"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.5,
          "difficultyAccuracy": 0.9,
          "contentFreshness": 0.8,
          "userCompletionRate": 0.8,
          "helpfulnessScore": 4.4
        }
      ],
      "subtasks": [
        {
          "id": "js-promises-sub-1",
          "title": "Create basic promises",
          "completed": false,
          "estimatedTime": 20,
          "resources": [],
          "notes": "Learn promise constructor and states"
        },
        {
          "id": "js-promises-sub-2",
          "title": "Handle promise resolution",
          "completed": false,
          "estimatedTime": 25,
          "resources": [],
          "notes": "then(), catch(), finally() methods"
        },
        {
          "id": "js-promises-sub-3",
          "title": "Chain promises",
          "completed": false,
          "estimatedTime": 30,
          "resources": [],
          "notes": "Promise chaining patterns"
        },
        {
          "id": "js-promises-sub-4",
          "title": "Use Promise.all()",
          "completed": false,
          "estimatedTime": 25,
          "resources": [],
          "notes": "Parallel promise execution"
        },
        {
          "id": "js-promises-sub-5",
          "title": "Error handling",
          "completed": false,
          "estimatedTime": 30,
          "resources": [],
          "notes": "Promise error handling patterns"
        },
        {
          "id": "js-promises-sub-6",
          "title": "Convert callbacks to promises",
          "completed": false,
          "estimatedTime": 20,
          "resources": [],
          "notes": "Promisification techniques"
        }
      ],
      "prerequisites": ["js-event-loop"],
      "followUpTasks": ["js-async-await"],
      "masteryLevel": "learning",
      "reviewSchedule": {
        "nextReview": "2024-12-20T00:00:00.000Z",
        "reviewCount": 0,
        "interval": 7,
        "retentionScore": 0.8
      },
      "timeTracking": {
        "estimatedTime": 150,
        "totalTimeSpent": 0,
        "sessions": []
      },
      "createdAt": "2024-12-13T00:00:00.000Z",
      "updatedAt": "2024-12-13T00:00:00.000Z",
      "completedAt": null
    },
    "js-async-await": {
      "id": "js-async-await",
      "title": "Master Async/Await",
      "description": "Modern async programming with async/await syntax",
      "category": "JavaScript",
      "status": "todo",
      "priority": "high",
      "difficulty": "medium",
      "estimatedTime": 120,
      "tags": ["async-await", "es6", "modern-js"],
      "resources": [
        {
          "id": "js-async-await-1",
          "title": "Async/Await in JavaScript",
          "url": "https://javascript.info/async-await",
          "type": "documentation",
          "difficulty": "intermediate",
          "estimatedReadTime": 20,
          "rating": 4.7,
          "lastUpdated": "2024-01-18T00:00:00.000Z",
          "author": "Ilya Kantor",
          "tags": ["javascript", "async-await", "es6"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.6,
          "difficultyAccuracy": 0.9,
          "contentFreshness": 0.8,
          "userCompletionRate": 0.8,
          "helpfulnessScore": 4.5
        },
        {
          "id": "js-async-await-2",
          "title": "Async/Await Best Practices",
          "url": "https://blog.bitsrc.io/async-await-best-practices-6b0b0b0b0b0b",
          "type": "blog",
          "difficulty": "intermediate",
          "estimatedReadTime": 15,
          "rating": 4.5,
          "lastUpdated": "2024-01-12T00:00:00.000Z",
          "author": "John Doe",
          "tags": ["javascript", "async-await", "best-practices"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.4,
          "difficultyAccuracy": 0.85,
          "contentFreshness": 0.7,
          "userCompletionRate": 0.75,
          "helpfulnessScore": 4.3
        },
        {
          "id": "js-async-await-3",
          "title": "Error Handling with Async/Await",
          "url": "https://medium.com/@grossman/error-handling-with-async-await-6c0b0b0b0b0b",
          "type": "medium",
          "difficulty": "intermediate",
          "estimatedReadTime": 18,
          "rating": 4.6,
          "lastUpdated": "2024-01-08T00:00:00.000Z",
          "author": "David Grossman",
          "tags": ["javascript", "async-await", "error-handling"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.5,
          "difficultyAccuracy": 0.9,
          "contentFreshness": 0.8,
          "userCompletionRate": 0.8,
          "helpfulnessScore": 4.4
        }
      ],
      "subtasks": [
        {
          "id": "js-async-await-sub-1",
          "title": "Write async functions",
          "completed": false,
          "estimatedTime": 20,
          "resources": [],
          "notes": "Basic async function syntax"
        },
        {
          "id": "js-async-await-sub-2",
          "title": "Use await keyword",
          "completed": false,
          "estimatedTime": 25,
          "resources": [],
          "notes": "Awaiting promise resolution"
        },
        {
          "id": "js-async-await-sub-3",
          "title": "Handle errors with try-catch",
          "completed": false,
          "estimatedTime": 30,
          "resources": [],
          "notes": "Error handling in async functions"
        },
        {
          "id": "js-async-await-sub-4",
          "title": "Parallel execution",
          "completed": false,
          "estimatedTime": 25,
          "resources": [],
          "notes": "Running async operations in parallel"
        },
        {
          "id": "js-async-await-sub-5",
          "title": "Convert promises to async/await",
          "completed": false,
          "estimatedTime": 20,
          "resources": [],
          "notes": "Refactoring promise chains"
        }
      ],
      "prerequisites": ["js-promises"],
      "followUpTasks": ["js-modules"],
      "masteryLevel": "learning",
      "reviewSchedule": {
        "nextReview": "2024-12-20T00:00:00.000Z",
        "reviewCount": 0,
        "interval": 7,
        "retentionScore": 0.8
      },
      "timeTracking": {
        "estimatedTime": 120,
        "totalTimeSpent": 0,
        "sessions": []
      },
      "createdAt": "2024-12-13T00:00:00.000Z",
      "updatedAt": "2024-12-13T00:00:00.000Z",
      "completedAt": null
    },
    "js-modules": {
      "id": "js-modules",
      "title": "ES6 Modules and Import/Export",
      "description": "Learn ES6 module system and modern JavaScript organization",
      "category": "JavaScript",
      "status": "todo",
      "priority": "medium",
      "difficulty": "easy",
      "estimatedTime": 90,
      "tags": ["modules", "es6", "import-export"],
      "resources": [
        {
          "id": "js-modules-1",
          "title": "ES6 Modules in Depth",
          "url": "https://hacks.mozilla.org/2015/08/es6-in-depth-modules/",
          "type": "blog",
          "difficulty": "intermediate",
          "estimatedReadTime": 20,
          "rating": 4.6,
          "lastUpdated": "2024-01-15T00:00:00.000Z",
          "author": "Jason Orendorff",
          "tags": ["javascript", "es6", "modules"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.5,
          "difficultyAccuracy": 0.9,
          "contentFreshness": 0.7,
          "userCompletionRate": 0.8,
          "helpfulnessScore": 4.4
        },
        {
          "id": "js-modules-2",
          "title": "JavaScript Modules Guide",
          "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules",
          "type": "documentation",
          "difficulty": "beginner",
          "estimatedReadTime": 25,
          "rating": 4.7,
          "lastUpdated": "2024-01-20T00:00:00.000Z",
          "author": "MDN Contributors",
          "tags": ["javascript", "modules", "documentation"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.6,
          "difficultyAccuracy": 0.95,
          "contentFreshness": 0.9,
          "userCompletionRate": 0.85,
          "helpfulnessScore": 4.5
        },
        {
          "id": "js-modules-3",
          "title": "Module Patterns in JavaScript",
          "url": "https://medium.com/@tkssharma/module-pattern-in-javascript-56d5ddea909f",
          "type": "medium",
          "difficulty": "intermediate",
          "estimatedReadTime": 15,
          "rating": 4.4,
          "lastUpdated": "2024-01-10T00:00:00.000Z",
          "author": "TKS Sharma",
          "tags": ["javascript", "modules", "patterns"],
          "isPremium": false,
          "language": "javascript",
          "read": false,
          "bookmarked": false,
          "progress": 0,
          "communityRating": 4.3,
          "difficultyAccuracy": 0.85,
          "contentFreshness": 0.7,
          "userCompletionRate": 0.75,
          "helpfulnessScore": 4.2
        }
      ],
      "subtasks": [
        {
          "id": "js-modules-sub-1",
          "title": "Create named exports",
          "completed": false,
          "estimatedTime": 15,
          "resources": [],
          "notes": "Export individual functions and variables"
        },
        {
          "id": "js-modules-sub-2",
          "title": "Use default exports",
          "completed": false,
          "estimatedTime": 15,
          "resources": [],
          "notes": "Export single default value"
        },
        {
          "id": "js-modules-sub-3",
          "title": "Import modules",
          "completed": false,
          "estimatedTime": 20,
          "resources": [],
          "notes": "Import named and default exports"
        },
        {
          "id": "js-modules-sub-4",
          "title": "Re-export modules",
          "completed": false,
          "estimatedTime": 15,
          "resources": [],
          "notes": "Barrel exports and re-exports"
        },
        {
          "id": "js-modules-sub-5",
          "title": "Dynamic imports",
          "completed": false,
          "estimatedTime": 25,
          "resources": [],
          "notes": "Code splitting and lazy loading"
        }
      ],
      "prerequisites": ["js-async-await"],
      "followUpTasks": ["js-classes"],
      "masteryLevel": "learning",
      "reviewSchedule": {
        "nextReview": "2024-12-20T00:00:00.000Z",
        "reviewCount": 0,
        "interval": 7,
        "retentionScore": 0.8
      },
      "timeTracking": {
        "estimatedTime": 90,
        "totalTimeSpent": 0,
        "sessions": []
      },
      "createdAt": "2024-12-13T00:00:00.000Z",
      "updatedAt": "2024-12-13T00:00:00.000Z",
      "completedAt": null
    }
  }
} 